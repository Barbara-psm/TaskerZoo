<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="TaskerZoo - Plataforma para la gestión interna de zoológicos.">
  <title>
    <%= title %>
  </title>
  <link rel="stylesheet" href="/css/estiloTaskerZooOutput.css">
  <link rel="icon" href="/favicons/faviconTaskerZoo.ico" type="image/x-icon">
</head>

<body class="bg-[#EDEDED] min-h-screen flex flex-col md:flex-row border-t-8 border-b-8 border-[#477963]">

  <%- include('./partials/nav.ejs', { paginaActual: 'dashboard' }) %>

    <!-- Contenido principal -->
    <main class="flex-1 md:ml-56 pt-0 px-6 pb-6 space-y-6">
      <!-- Fondo animado -->
      <div id="bg-slider"
        class="absolute inset-0 w-full h-full pointer-events-none z-0 transition-opacity duration-1000 opacity-20">
        <img id="bg-image" src="" class="w-full h-full object-cover select-none" alt="Imagen de fondo animada" />
      </div>

      <div class="relative z-10">
        <div class="mb-8"><%- include('./partials/header.ejs', { nombreEmpleado: nombreEmpleado }) %></div>
        <!-- Tarjetas con la información principal -->
        <div
          class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 grid-auto-rows-[minmax(170px,auto)] grid-auto-flow-dense">

          <!-- Fecha y hora actuales -->
          <div class="bg-white p-4 rounded-lg shadow-2xl flex flex-col h-[170px]">
            <div class="flex items-center gap-3">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 24 24" fill="none"
                stroke="#a2b04c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="lucide lucide-calendar-clock-icon lucide-calendar-clock">
                <path d="M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5" />
                <path d="M16 2v4" />
                <path d="M8 2v4" />
                <path d="M3 10h5" />
                <path d="M17.5 17.5 16 16.3V14" />
                <circle cx="16" cy="16" r="6" />
              </svg>
              <h2 class="font-rubik text-2xl font-bold text-blue-500">Hoy</h2>
            </div>
            <div class="flex-1 flex items-center justify-center">
              <p id="fechaHoraActual" class="font-poppins text-gray-700 text-[18px] text-center">Cargando...</p>
            </div>
          </div>

          <!-- Resumen del clima (OpenWeatherMap) -->
          <div class="bg-white p-4 rounded-lg shadow-2xl flex flex-col h-[170px]">
            <div class="flex items-center gap-3">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 24 24" fill="none"
                stroke="#a2b04c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="lucide lucide-cloud-sun-rain-icon lucide-cloud-sun-rain">
                <path d="M12 2v2" />
                <path d="m4.93 4.93 1.41 1.41" />
                <path d="M20 12h2" />
                <path d="m19.07 4.93-1.41 1.41" />
                <path d="M15.947 12.65a4 4 0 0 0-5.925-4.128" />
                <path d="M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24" />
                <path d="M11 20v2" />
                <path d="M7 19v2" />
              </svg>
              <h2 class="font-rubik text-2xl font-bold text-blue-500">Clima Actual</h2>
            </div>
            <div class="flex-1 flex items-center justify-center">
              <div id="weather-content" class="text-gray-700 text-center">
                <div class="flex items-center justify-center gap-2">
                  <div class="animate-pulse">Cargando datos del clima...</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Eventos del día (mostrar los de hoy) -->
          <div class="bg-white p-4 rounded-lg shadow-2xl xl:row-span-2">
            <div class="flex items-center gap-3 mb-3">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 24 24" fill="none"
                stroke="#a2b04c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="lucide lucide-calendar-arrow-down-icon lucide-calendar-arrow-down">
                <path d="m14 18 4 4 4-4" />
                <path d="M16 2v4" />
                <path d="M18 14v8" />
                <path d="M21 11.354V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.343" />
                <path d="M3 10h18" />
                <path d="M8 2v4" />
              </svg>
              <h2 class="font-rubik text-2xl font-bold text-blue-500">Eventos del Día</h2>
            </div>
            <% if (eventosHoy.length> 0) { %>
              <ul class="space-y-3 mb-4">
                <% eventosHoy.forEach(evento=> { %>
                  <li class="flex justify-between items-center">
                    <span class="text-gray-700">
                      <%= evento.nombre %> - <%= evento.hora %>
                    </span>
                    <span class="text-xs bg-[#477963] text-white px-2 py-1 rounded">
                      <%= evento.zona %>
                    </span>
                  </li>
                  <% }); %>
              </ul>
              <% } else { %>
                <p class="font-poppins text-gray-500 italic mb-4">No hay eventos programados para hoy</p>
                <% } %>
                  <a href="/eventos"
                    class="bg-blue-500 text-white font-rubik px-6 py-2 rounded hover:bg-blue-600 transition w-full md:w-auto inline-block text-center">
                    Ver todos los eventos
                  </a>
          </div>

          <!-- Incidencias -->
          <div class="bg-white p-4 rounded-lg shadow-2xl xl:row-span-2">
            <div class="flex items-center gap-3 mb-3">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 24 24" fill="none"
                stroke="#a2b04c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="lucide lucide-message-square-warning-icon lucide-message-square-warning">
                <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z" />
                <path d="M12 7v2" />
                <path d="M12 13h.01" />
              </svg>
              <h2 class="font-rubik text-2xl font-bold text-blue-500">Incidencias Pendientes</h2>
            </div>

            <% if (incidenciasPendientes.length> 0) { %>
              <ul class="space-y-3 mb-4">
                <% incidenciasPendientes.forEach(incidencia=> { %>
                  <li class="flex justify-between items-start p-2 border-l-4 border-red-500 bg-red-50 rounded">
                    <div>
                      <p class="font-medium">
                        <%= incidencia.zona.nombre %>
                      </p>
                      <p class="text-sm text-gray-600">
                        <%= incidencia.descripcion %>
                      </p>
                      <p class="text-xs text-gray-500 mt-1">
                        <%= new Date(incidencia.fecha).toLocaleDateString('es-ES') %>
                      </p>
                    </div>
                    <button onclick="window.location.href='/incidencias'"
                      class="text-xs bg-[#477963] text-white px-2 py-1 rounded hover:bg-[#365c4c] transition">
                      Ver
                    </button>
                  </li>
                  <% }); %>
              </ul>
              <% } else { %>
                <p class="text-gray-500 italic mb-4">No hay incidencias pendientes</p>
                <% } %>

                  <a href="/incidencias"
                    class="bg-blue-500 text-white font-rubik px-6 py-2 rounded hover:bg-blue-600 transition w-full md:w-auto inline-block text-center">
                    Ver todas las incidencias
                  </a>
          </div>

          <!-- Aforo visitantes (revisar por qué no funciona) -->
          <div class="bg-white p-4 rounded-lg shadow-2xl flex flex-col h-[170px]">
            <div class="flex items-center gap-3">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 24 24" fill="none"
                stroke="#a2b04c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="lucide lucide-ticket-icon lucide-ticket">
                <path
                  d="M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z" />
                <path d="M13 5v2" />
                <path d="M13 17v2" />
                <path d="M13 11v2" />
              </svg>
              <h2 class="font-rubik text-2xl font-bold text-blue-500">Aforo de Hoy</h2>
            </div>
            <div class="flex-1 flex items-center justify-center">
              <p class="text-gray-700 text-center">
                <span class="text-4xl font-bold text-animundo-green">
                  <%= entradasHoy %>
                </span>
                <br>
                <span class="font-poppins text-lg">entradas vendidas</span>
              </p>
            </div>
          </div>

        </div>
      </div>

    </main>

    <script>
      // Mostrar fecha y hora actual
      function actualizarFechaHora() {
        const ahora = new Date();
        const opcionesFecha = {
          weekday: 'long',
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        };
        const opcionesHora = {
          hour: '2-digit',
          minute: '2-digit',
          hour12: false
        };

        const dia = ahora.toLocaleDateString('es-ES', opcionesFecha);
        const hora = ahora.toLocaleTimeString('es-ES', opcionesHora);

        const diaCapitalizado = dia.charAt(0).toUpperCase() + dia.slice(1);
        document.getElementById('fechaHoraActual').textContent =
          `${diaCapitalizado}, ${hora}`;
      }
      actualizarFechaHora();
      setInterval(actualizarFechaHora, 60000);
    </script>

    <script>
      // Mostrar el clima actual de la zona en la que se encuentra el zoo
      async function cargarClima() {
        const weatherDiv = document.getElementById('weather-content');
        try {
          const res = await fetch('/api/weather');
          const data = await res.json();
          if (res.ok) {
            weatherDiv.innerHTML = `
            <div class="flex items-center justify-center gap-2">
                <img src="https://openweathermap.org/img/wn/${data.icono}@2x.png" 
                     alt="${data.descripcion}" 
                     class="w-12 h-12">
                <span class="text-xl font-semibold">${Math.round(data.temperatura)}°C</span>
            </div>
            <div class="font-poppins mt-2 text-center">
                <span class="capitalize">${data.descripcion}</span><br>
                <div class="grid grid-cols-2 gap-2 mt-2 text-sm">
                    <div class="text-gray-600">Humedad: ${data.humedad}%</div>
                    <div class="text-gray-600">Viento: ${data.viento} m/s</div>
                </div>
            </div>
          `;
          } else {
            weatherDiv.innerHTML = '<div class="text-red-500">No se pudo obtener el clima</div>';
          }
        } catch (e) {
          weatherDiv.innerHTML = '<div class="text-red-500">Error al cargar el clima</div>';
        }
      }

      // Cargar el clima al iniciar la página
      document.addEventListener('DOMContentLoaded', cargarClima);

      // Actualizar el clima cada 30 minutos
      setInterval(cargarClima, 1800000);
    </script>

    <!-- Fondo con imágenes  -->
    <script>
      // Configuración del slideshow
      const bgImage = document.getElementById('bg-image');
      const bgSlider = document.getElementById('bg-slider');
      const images = <%- backgroundImages %>;
      let current = 0;

      // Efectos de transición
      function fadeOut(element, duration = 1000) {
        element.style.transition = `opacity ${duration}ms`;
        element.style.opacity = 0;
      }

      function fadeIn(element, duration = 1000) {
        element.style.transition = `opacity ${duration}ms`;
        element.style.opacity = 0.3;
      }

      function nextImage() {
        fadeOut(bgSlider);
        setTimeout(() => {
          current = (current + 1) % images.length;
          bgImage.src = images[current];
          fadeIn(bgSlider);
        }, 1000);
      }

      // Precargar imágenes
      function preloadImages() {
        images.forEach(src => {
          const img = new Image();
          img.src = src;
        });
      }

      // Iniciar el slideshow
      document.addEventListener('DOMContentLoaded', () => {
        if (images && images.length > 0) {
          preloadImages();
          bgImage.src = images[0];
          fadeIn(bgSlider);
          setInterval(nextImage, 6000);
        } else {
          console.warn('No hay imágenes para el slideshow');
        }
      });
    </script>

</body>

</html>